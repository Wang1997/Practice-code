/*
 *@author Wang1997 
 *2016年4月07号 
 *       
 *                   动规-导弹拦截 
 *有一导弹拦截系统，该系统拦截的第一枚导弹可以不限高度，之后每一枚导弹 
 *拦截的高度必定比前一次拦截高度高，输入导弹飞来高度，输出拦截导弹最大数量 
 *输入                                     输出 
 *    300 250 275 252 200 138 245              5
 *5枚为 300 275 252 200 138
 *总结
 *array数组储存导弹高度，d数组储存最优解个数
 *从后往前搜索，以n作为阶段进行划分，依次求出各个子问题的最优解 
 */
#include<iostream>
using namespace std;
int main()
{
	int array[25],d[25]={0};
    int i,n=0,j,max;
	while(cin>>i)//由于输入的导弹数量不明确，输入到文件结尾结束再对数据处理 
    {
	   array[n]=i;
	   n++;
    } 
    for(i=n-2;i>=0;i--)//从后往前计算d[i]值
    {              
       for(j=i+1;j<n;j++)//计算d[i]的最优解 
       {
       	  //如果 第（i+x）导弹(x从1开始，到最后结束)比第i个导弹高度低
		  //且 第（i+x）最优解个数+1（即把这枚导弹加入最优解中）大于i的最优解
		  //那么更新i的最优解 
          if(( array[j] <= array[i] )&&( d[j]+1 > d[i]))
             d[i]=d[j]+1;
       }
    }
    max = 0;
    for(i=0;i<n;i++)//求出最大最优解个数 
    {   
       if(d[i]>max)
       {
          max = d[i];//更新最大值 
       }
    }
    cout<<max+1<<'\n';      //输出结果
    //方便起见，全部初始化为0，所以结果会忽略高度最低那一枚导弹，结果+1 
}